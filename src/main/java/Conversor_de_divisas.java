/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author alumno
 */
public class Conversor_de_divisas extends javax.swing.JFrame {
    String clasimonedaingreso = "GTQ";
    String monedaconvertir = "GTQ";
    /**
     * Creates new form Conversor_de_divisas
     */
    public Conversor_de_divisas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ingreso = new javax.swing.JTextField();
        monedaingresada = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        monedaconvertida = new javax.swing.JComboBox<>();
        convertir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        resultado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel1.setText("Introduce importe");

        ingreso.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ingreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresoActionPerformed(evt);
            }
        });

        monedaingresada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GTQ", "USD", "EUR", "MX" }));
        monedaingresada.setBorder(new javax.swing.border.MatteBorder(null));
        monedaingresada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monedaingresadaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel2.setText("Moneda a convertir...");

        monedaconvertida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GTQ", "USD", "EUR", "MX" }));
        monedaconvertida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monedaconvertidaActionPerformed(evt);
            }
        });

        convertir.setText("Convertir");
        convertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertirActionPerformed(evt);
            }
        });

        resultado.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(monedaconvertida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(convertir))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ingreso, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(monedaingresada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monedaingresada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(monedaconvertida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(convertir))
                .addGap(45, 45, 45)
                .addComponent(resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ingresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresoActionPerformed

    private void convertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertirActionPerformed
        double result = 0 ;
        double ingmoneda = Double.parseDouble(ingreso.getText());
        switch (clasimonedaingreso){
            case "GTQ" -> {
                if(monedaconvertir.equals("USD")) {
                  result = (ingmoneda * 0.13); 
                  resultado.setText("Resultado: " +Double.toString(  result )+ " USD");
                }
                else if (monedaconvertir.equals("EUR")){
                    result = (ingmoneda * 0.12);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " EUR");
                }
                else if (monedaconvertir.equals("MX")){
                    result= (ingmoneda * 2.67);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " MX");
                }
                else {
                    result = ingmoneda ;
                    resultado.setText("Resultado: " +Double.toString(  result )+ " GTQ");
                }
                
                }
            case "USD" -> {
                if (monedaconvertir.equals("GTQ")){
                    result = (ingmoneda * 7.67);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " GTQ");
                }
                else if (monedaconvertir.equals ("EUR")){
                    result = (ingmoneda * 0.95);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " EUR");
                }
                else if (monedaconvertir.equals ("MX")){
                    result = (ingmoneda * 20.43);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " MX");
            }
                else {
                    result= ingmoneda;
                    resultado.setText("Resultado: " +Double.toString(  result )+ " USD");
                }  
           
           }
            case "EUR" -> {
                if (monedaconvertir.equals("GTQ")){
                    result = (ingmoneda * 8.07);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " GTQ");
                }
                else if (monedaconvertir.equals ("USD")){
                    result = (ingmoneda * 1.05);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " USD");
                }
                else if (monedaconvertir.equals ("MX")){
                    result = (ingmoneda * 21.50);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " MX");
            }
                else {
                    result= ingmoneda;
                    resultado.setText("Resultado: " +Double.toString(  result )+ " EUR");
                }
 
           
           } 
            case "MX" -> {
                if (monedaconvertir.equals("GTQ")){
                    result = (ingmoneda * .38);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " GTQ");
                }
                else if (monedaconvertir.equals ("USD")){
                    result = (ingmoneda *0.049 );
                    resultado.setText("Resultado: " +Double.toString(  result )+ " USD");
                }
                else if (monedaconvertir.equals ("EUR")){
                    result = (ingmoneda * 0.047);
                    resultado.setText("Resultado: " +Double.toString(  result )+ " EUR");
            }
                else {
                    result= ingmoneda;
                    resultado.setText("Resultado: " +Double.toString(  result )+ " MX");
                }
           }     
}
    }//GEN-LAST:event_convertirActionPerformed

    private void monedaingresadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monedaingresadaActionPerformed
        clasimonedaingreso = monedaingresada.getSelectedItem().toString();
        
    }//GEN-LAST:event_monedaingresadaActionPerformed

    private void monedaconvertidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monedaconvertidaActionPerformed
        monedaconvertir= monedaconvertida.getSelectedItem().toString();
     
    }//GEN-LAST:event_monedaconvertidaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversor_de_divisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversor_de_divisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversor_de_divisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversor_de_divisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conversor_de_divisas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convertir;
    private javax.swing.JTextField ingreso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> monedaconvertida;
    private javax.swing.JComboBox<String> monedaingresada;
    private javax.swing.JLabel resultado;
    // End of variables declaration//GEN-END:variables
}
